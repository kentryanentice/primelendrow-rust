type Result = variant { Ok : User; Err : text };
type Result_1 = variant { Ok : Vault; Err : text };
type Result_2 = variant { Ok : vec User; Err : text };
type User = record {
  updated_at : int64;
  user_type : UserType;
  username : text;
  user_level : UserLevel;
  user_badge : UserBadge;
  middle_name : text;
  created_at : int64;
  first_name : text;
  last_name : text;
  principal_id : principal;
  mobile : text;
  profile : text;
  primary_id : blob;
};
type UserBadge = variant { Administrator; Normal; Verified };
type UserLevel = variant { L1; L2; L100 };
type UserType = variant { User; Admin; Verifying; Pending };
type Vault = record {
  updated_at : int64;
  system_balance : int64;
  created_at : int64;
  virtual_balance : int64;
  admin_name : text;
  principal_id : principal;
};
service : {
  create_user : (principal) -> (Result);
  create_vault : (principal) -> (Result_1);
  get_all_users : (principal) -> (Result_2);
  get_user : (principal) -> (Result);
  update_user : (principal, blob, text, text, text, text) -> (Result);
  verify_user : (principal, principal) -> (Result);
}
